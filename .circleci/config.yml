version: 2.1

orbs:
  ruby: circleci/ruby@1.0
  node: circleci/node@2
  kubernetes: circleci/kubernetes@0.11.2

jobs:
  test:
    parallelism: 1
    docker:
      - image: cimg/ruby:2.7.2-node
        environment:
          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle
          PGHOST: 127.0.0.1
          PGUSER: breaded
          RAILS_ENV: test
      - image: circleci/postgres:9.6-alpine
        environment:
          POSTGRES_USER: breaded
          POSTGRES_DB: breaded_test
          POSTGRES_PASSWORD: password
      - image: redis:alpine
      - image: selenium/standalone-chrome:3.141.59
    environment:
      BUNDLE_JOBS: "3"
      BUNDLE_RETRY: "3"
      DB_HOST: 127.0.0.1
      DB_USERNAME: breaded
      DB_PASSWORD: password
      RAILS_ENV: test
      HOST_URL: "http://127.0.0.1"
      REDIS_URL: "redis://127.0.0.1:6379"
      STRIPE_SECRET_KEY: "sk_test_51HeFW8I4g05dLynGWnnUZjNGP6uDnqvCDUGGmqcHhlJyQpP7NS3ZEYIVbQ3DtHFoWffWbFSc8Zd4EVZt3i4gwLtG00Sva77iue"
      STRIPE_PUBLISHABLE_KEY: "pk_test_51HeFW8I4g05dLynGZJRfdRRsDN27EsdFzXdp2mKrQ58QqhgVBIPENjzPUFvbQs1PAph7ZkVKSnSKyIAhpmnQFMI6007G0NWpTK"
      STRIPE_WEBHOOK_SECRET: "whsec_3Bi3nIoiFoj95LZ5HzQl8jzbiULxSAVP"
      SELENIUM_URL: 'http://127.0.0.1:4444/wd/hub'

    steps:
      - checkout

      - restore_cache:
          key: rails-breaded-bundle-{{ checksum "Gemfile" }}
      - run:
          name: Bundle Install
          command: bundle check --path vendor/bundle || bundle install --path vendor/bundle
      - save_cache:
          key: rails-breaded-bundle-{{ checksum "Gemfile" }}
          paths:
            - vendor/bundle

      - restore_cache:
          key: rails-breaded-yarn-{{ checksum "package.json" }}
      - run:
          name: Install Dependencies
          command: yarn install --immutable
      - save_cache:
          key: rails-breaded-yarn-{{ checksum "package.json" }}
          paths:
            - ~/.cache/yarn
      - run:
          name: Compile FE
          command: rake assets:precompile

      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Database setup
          command: bundle exec rails db:rebuild
      - run:
          name: Run tests
          command: bundle exec rake test
      - run:
          name: Run system tests
          command: bundle exec rake test:system

  build_release:
    docker:
      - image: circleci/buildpack-deps:stretch
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Docker login
          command: docker login -u $DO_DOCKER_USER -p $DO_DOCKER_PASSWORD registry.digitalocean.com
      - run:
          name: Build docker image
          command: docker build -f Dockerfile.production . -t breaded-production:$CIRCLE_SHA1 --build-arg COMMIT_HASH=$CIRCLE_SHA1
      - run:
          name: Tag docker image 
          command: docker tag breaded-production:$CIRCLE_SHA1 registry.digitalocean.com/breaded/breaded-production:$CIRCLE_SHA1
      - run:
          name: Push docker image
          command: docker push registry.digitalocean.com/breaded/breaded-production:$CIRCLE_SHA1

  deploy:
    machine: true
    steps:
      - kubernetes/install-kubectl
      - run:
          name: Store KUBECTL cert
          command: echo "$KUBERNETES_CLUSTER_CERTIFICATE" | base64 --decode > cert.crt
      - run:
          name: Update web deployment
          command: kubectl --kubeconfig=/dev/null \
            --server=$KUBERNETES_SERVER \
            --certificate-authority=cert.crt \
            --token=$KUBERNETES_TOKEN \
            set image deployment/web web=registry.digitalocean.com/breaded/breaded-production:$CIRCLE_SHA1
      - run:
          name: Update background job deployment
          command: kubectl --kubeconfig=/dev/null \
            --server=$KUBERNETES_SERVER \
            --certificate-authority=cert.crt \
            --token=$KUBERNETES_TOKEN \
            set image deployment/background-job background-job=registry.digitalocean.com/breaded/breaded-production:$CIRCLE_SHA1

workflows:
  version: 2
  test_and_deploy:
    jobs:
      - test
      - build_release:
          requires:
            - test
          filters:
            branches:
              only: master
      - deploy:
          requires:
            - build_release
          filters:
            branches:
              only: master
